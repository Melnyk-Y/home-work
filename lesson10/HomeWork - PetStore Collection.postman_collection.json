{
	"info": {
		"_postman_id": "207536cf-8d9e-4da3-9b17-6a26bc2844fb",
		"name": "HomeWork - PetStore Collection",
		"description": "Test cases for PetStore website by Yulia M",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31340965"
	},
	"item": [
		{
			"name": "Test Case 1: Verify Pet Creation",
			"item": [
				{
					"name": "Create a new pet with valid details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"setTimeout(() => {}, 5000);",
									"",
									"pm.collectionVariables.set(\"randomInt\", pm.response.json().id);",
									"",
									"// Check that status code is 200",
									"pm.test(\"Status code is 200\",() => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Check New Pet Name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Simba\");",
									"});",
									"",
									"pm.test(\"Check that status is not empty\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).is.not.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{$randomInt}},\n  \"category\": {\n    \"id\": {{$randomInt}},\n    \"name\": \"cats\"\n  },\n  \"name\": \"Simba\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"name\": \"homepet\"\n    }\n  ],\n  \"status\": \"pending\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve the created pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/{{randomInt}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{randomInt}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve pet with not existing ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/{{randomInt}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{randomInt}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Case 2: Verify Inventory Update",
			"item": [
				{
					"name": "Fetch the current inventory status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the inventory via place an order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{$randomInt}},\n  \"petId\": 10,\n  \"quantity\": 1,\n  \"shipDate\": \"2023-11-29T19:45:42.454Z\",\n  \"status\": \"available\",\n  \"complete\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify updated inventory status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/order/{{randomInt}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{randomInt}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Case 3: Verify Order Placement",
			"item": [
				{
					"name": "Create a new order with valid details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check that status code is 200",
									"pm.test(\"Status code is 200\",() => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"randomInt\", pm.response.json().id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{$randomInt}},\n  \"petId\": 10,\n  \"quantity\": 5,\n  \"shipDate\": \"2023-11-23T20:54:24.463Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/store/order/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve the created order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/order/{{randomInt}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{randomInt}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/store/order/{{randomInt}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{randomInt}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Case 4: Verify User Authentication",
			"item": [
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{$randomInt}},\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"password\": \"{{testVariable}}\",\n  \"phone\": \"123123123\",\n  \"userStatus\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user with empty ID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": ,\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"password\": \"{{testVariable}}\",\n  \"phone\": \"123123123\",\n  \"userStatus\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate the created user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check that status code is 200",
									"pm.test(\"Status code is 200\",() => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									" const response = pm.response.json();",
									"",
									"console.log(response.status);",
									"console.log(response['status']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate user with not existing name",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v2/user/000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"user",
								"000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs user into system",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/login?username={{username}}&password={{testVariable}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{testVariable}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs out logged in user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by Name",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Case 5: Verify Pet Deletion",
			"item": [
				{
					"name": "Create a new pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"setTimeout(() => {}, 5000);",
									"",
									"// Check that status code is 200",
									"pm.test(\"Status code is 200\",() => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check New pet ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).not.to.be.null;",
									"});",
									"",
									"pm.test(\"Check New Pet Name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"pavych\");",
									"});",
									"",
									"pm.test(\"Check that status is not empty\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).is.not.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{$randomInt}},\n  \"category\": {\n    \"id\": {{$randomInt}},\n    \"name\": \"birds\"\n  },\n  \"name\": \"pavych\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the created pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/{{randomInt}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{randomInt}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch the pet by ID after deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/{{randomInt}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{randomInt}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		},
		{
			"key": "randomInt",
			"value": ""
		}
	]
}